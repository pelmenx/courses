{\rtf1\ansi\ansicpg1251\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 def get_prg(plaintext_size, k):\
    s = [0 for x in range(plaintext_size)]\
    for i in range(0,plaintext_size):\
        s[i]= i\
    j=0\
    for i in range(plaintext_size):\
        j=(j+int(s[i])+int(k[i%k_size])) % plaintext_size\
        s[i], s[j] = s[j], s[i]\
    i=0\
    j=0\
    \
    for i in range(0,plaintext_size):\
        i=(i+1)%plaintext_size\
        j=(j+s[i])%plaintext_size\
        s[i], s[j] = s[j], s[i]\
        key = s[(s[i] + s[j]) % plaintext_size]\
        key=str(key)\
        key=list(''.join(format(ord(x), '08b') for x in key))\
        return key\
\
def fake_rc4(plaintext, k):\
    cipher = [0 for x in range(plaintext_size)]\
    for i in range (0,plaintext_size):\
        if plaintext[i] != k[i]:\
            cipher[i]=str(1)\
        else:\
            cipher[i]=str(0)\
    return cipher\
\
plaintext="p"\
k="q"\
k2=list(''.join(format(ord(x), '08b') for x in k))\
plaintext2=list(''.join(format(ord(x), '08b') for x in plaintext))\
plaintext_size=len(plaintext2)\
k_size=len(k2)\
rng=get_prg(plaintext_size,k2)\
print(plaintext2)\
print(rng)\
cip=fake_rc4(plaintext2,rng)\
print(cip)}